{
  "name": "layout-fetcher",
  "version": "0.0.0",
  "description": "Express middleware to fetch remote layouts",
  "main": "layout-fetcher.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/danhart/layout-fetcher.git"
  },
  "keywords": [
    "layout",
    "express",
    "middleware"
  ],
  "author": {
    "name": "Dan Hart"
  },
  "bugs": {
    "url": "https://github.com/danhart/noths-layout/issues"
  },
  "homepage": "https://github.com/danhart/layout-fetcher",
  "dependencies": {
    "request": "^2.36.0",
    "mustache": "^0.8.1"
  },
  "readme": "layout-fetcher\n==============\n\nExpress middleware for fetching layout templates.\n\nCurrently only supports mustache templates.\n\nUseful for fetching dynamic layouts.\n\nUsage\n-----\n\n```\nvar layoutFetcher = require('layout-fetcher');\n\napp.use(layoutFetcher(\"http://www.example.com/template\"));\n```\n\nIf fetching the layout was successful this will create a `res.locals.layout` model. \n\nThis can be used to render the layout template with view data:\n\n```\nvar html = res.locals.layout.render(view);\n```\n\nOptions\n-------\n\nOptions can be provided with an object as a second argument. Example:\n\n```\napp.use(layoutFetcher(\"http://www.example.com/template\", {\n    cacheLayout: true\n}));\n```\n\nCurrently the only option is `cacheLayout`. When set to `true` it will cause the middlware to only ever make \none request to the template url. The same layout will then be provided for every subsequent request.\n\n`cacheLayout: true` is useful when you are developing your express application, but should not be used on production.\n",
  "readmeFilename": "README.md",
  "_id": "layout-fetcher@0.0.0",
  "_shasum": "14d6eba74021e7c31f74e54aa2d42075705c2b75",
  "_resolved": "git://github.com/danhart/layout-fetcher.git#0ed335a704e8569515a9b55fe8d44db1b0d7cbfd",
  "_from": "layout-fetcher@git://github.com/danhart/layout-fetcher.git#0ed335a704e8569515a9b55fe8d44db1b0d7cbfd"
}
